
// General class definitions for styles that can be applied globally

.fouc {
  visibility: hidden;
}

// Background classes
.bg {
  &__ice {
    background-color: $ice;
    color: $base-font-color;
    h1, .h1,
    h2, .h2,
    h3, .h3,
    h4, .h4,
    a[href] {
      color: $primary-color !important;
      &:focus {
        @include focus-outline($color: $charcoal);
      }
    }
  }
  &__dark {
    color: $white;
    h1, .h1,
    h2, .h2,
    h3, .h3,
    h4, .h4,
    a[href] {
      color: $white !important;
    }
    a[href]:not(.button__outlined-white):not(.button):not(.arrow-link-white):not(.external-link) {
      &:hover {
        background-color: $white !important;
        color: $primary-color !important;
      }
      &:focus {
        @include focus-outline($color: $white);
        background-color: $white !important;
        color: $primary-color !important;
      }
    }
    a[href]:not(.button__outlined-white):not(.button):not(.arrow-link-white):not(.external-link) {
      text-decoration: underline;
    }
    a[href].button__outlined-white {
      color: $action-color;
      &:hover {
        background-color: $white;
        color: $primary-color !important;
      }
      &:focus {
        @include focus-outline($color: $white);
        color: $primary-color !important;
      }
    }
    a[href].button {
      color: $action-color !important;
      background-color: $white;
      border: 1px solid $white !important;
      &:hover {
        color: $white !important;
        background-color: $action-color !important;
        border: 1px solid $action-color !important;
      }
      &:focus {
        color: $white !important;
        background-color: $action-color !important;
        border: 1px solid $action-color !important;
        @include focus-outline($color: $white);
      }
    }
  }
  &__primary {
    background-color: $primary-color;
  }
  &__white {
    background-color: $white;
  }

}

// Text classes
.text {
  &__centered {
    text-align: center;
  }
  &__large {
    font-size: 1.25em;
  }
  &__small {
    font-size: .8em;
  }
  &__allcaps {
    text-transform: uppercase;
  }
  &__label {
    text-transform: uppercase;
    color: $primary-color;
    @include font-size(16px);
    @include font-weight(semibold);
    @include tracking(40);
    margin-bottom: 0;
  }
  &__large-slides {
    font-size: 1.5em;
    @include bp(small, up) {
      font-size: 1.75em;
    }
    @include bp(medium, up) {
      font-size: 1em;
    }
    @include bp(large, up) {
      font-size: 1.25em;
    }
  }
  &__small-slides {
    font-size: .9em;
    @include bp(small, up) {
      font-size: 1em;
    }
    @include bp(medium, up) {
      font-size: .6em;
    }
    @include bp(large, up) {
      font-size: .8em;
    }
  }
}

// viewport visibility
.desktop {
  display: none;
  @include bp(medium, up) {
    display: block;
  }
}

.mobile {
  display: block;
  @include bp(medium, up) {
    display: none;
  }
}

.page-title-wrapper {
  margin-top: $gutter*2;
  margin-bottom: $gutter;
  .page-title {
    text-align: center;
    //padding-bottom: rem($vertical-spacing/2);
    //border-bottom: 7px solid $ice;
  }
}

.breadcrumb-wrapper {
  & + .page-title-wrapper {
    margin-top: 0;
  }
}

.hero-image-wrapper {
  position: relative;
  margin-top: 20px;
  &:after {
    display: block;
    content: "";
    width: 100%;
    height: 45px;
    background: url("../../static/images/hero-border.svg") bottom left;
  }

  @include bp($desktop-nav, up) {
    margin-top: 0;
    &:after {
      height: 90px;
    }
  }
}

h3.teaser-title {
  a[href] {
    color: $black;
    text-decoration: underline;
    text-decoration-color: transparent;
    transition: .3s;

    &:hover,
    &:focus {
      color: $primary-color;
      text-decoration: underline;
    }
  }
}

.tags {
  @include font-size(14px);
  text-transform: uppercase;
}

.toolbar-icon-toggle-horizontal,
.toolbar-icon-toggle-vertical {
  z-index: 2;
}

#scroll-top-wrapper {
  position: fixed;
  bottom: $gutter;
  right: $gutter;

  button,
  a {
    display: inline-block;
    -webkit-transition: color 250ms cubic-bezier(0.82, 0.06, 0.14, 0.97);
    transition: color 250ms cubic-bezier(0.82, 0.06, 0.14, 0.97);

    // set the width/height to match that of the icon (set in the mixin if not overwritten below)
    width: 32px;
    height: 32px;
    //border: 1px solid $white;
    cursor: pointer;

    &.uparrow .icon {
      @include icon($icon-arrow-down, $iconSize: 20px, $iconBgSize: 32px, $iconBg: $primary-color, $iconColor: $white, $iconHoverBg: $black, $iconHoverColor: $white, $iconRadius: 0);
      &:before {
        transform: rotate(180deg);
      }
      //&:hover {
      //  background-color: lighten($primary-color, 10%);
      //}
    }

    &:focus {
      @include focus-outline($color: $white);

      .icon {
        background-color: $white;
        color: $primary-color;
      }
    }

  }
}
